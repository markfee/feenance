<?php

namespace api;
use \$MODEL$;
use Markfee\Responder\Respond;
use Misc\Transformers\$MODEL$Transformer;
use Illuminate\Database\Eloquent\ModelNotFoundException;

class $NAME$ extends \BaseController {

  /* @return Transformer */
  protected function getTransformer() {    return $this->transformer ?: new $MODEL$Transformer;    }

  /**
   * Display a listing of $COLLECTION$
   *
   * @return Response
   */
  public function index()
  {
      $$COLLECTION$ = $MODEL$::paginate();
      return Respond::Paginated($$COLLECTION$, $this->transformCollection($$COLLECTION$->all()));
  }

  /**
   * Display the specified $RESOURCE$.
   *
   * @param  int  $id
   * @return Response
   */
  public function show($id)
  {
    try {
      $$RESOURCE$ = $MODEL$::findOrFail($id);
      return Respond::Raw($this->transform($$RESOURCE$));
    } catch (ModelNotFoundException $e) {
      return Respond::NotFound($e->getMessage());
    }
  }


	/**
	 * Store a newly created $RESOURCE$ in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		$validator = Validator::make($data = Input::all(), $MODEL$::$rules);

		if ($validator->fails())
		{
			return Redirect::back()->withErrors($validator)->withInput();
		}

		$MODEL$::create($data);

		return Redirect::route('$COLLECTION$.index');
	}

	/**
	 * Show the form for editing the specified $RESOURCE$.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$$RESOURCE$ = $MODEL$::find($id);

		return View::make('$COLLECTION$.edit', compact('$RESOURCE$'));
	}

	/**
	 * Update the specified $RESOURCE$ in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$$RESOURCE$ = $MODEL$::findOrFail($id);

		$validator = Validator::make($data = Input::all(), $MODEL$::$rules);

		if ($validator->fails())
		{
			return Redirect::back()->withErrors($validator)->withInput();
		}

		$$RESOURCE$->update($data);

		return Redirect::route('$COLLECTION$.index');
	}

	/**
	 * Remove the specified $RESOURCE$ from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$MODEL$::destroy($id);

		return Redirect::route('$COLLECTION$.index');
	}

}
